  /*
  ei ota inputteja 
  */




const int NLEDS = 4; 
const int LEDPINS[NLEDS] = {7,8,9,10};
const int SWITCHPINS[NLEDS] = {3,4,5,6};
const int PAUSEB4SEQ = 1000; // Millis before starting the sequence.
const int MINLEVEL = 4;
const int POWER = 2;
int val = 0;
int gameLevel;
int simonSez[4]; // sequence saved in this array
int motorPin = 12;

/**************************************************************************************************/
/*****************************************************************************************************/

void setup() {
  pinMode(11, OUTPUT);
  pinMode(motorPin, OUTPUT);
  pinMode(POWER, INPUT);
  randomSeed(analogRead(0));//RNG
  gameLevel = 4;
  
  for (byte l=0; l<NLEDS; l++) {
    pinMode(LEDPINS[l], OUTPUT);
  }
 
  playLoseSequence();
  playWinSequence(); 
  }
/****************************************************************************************************/
void loop() {
  int done;
  val = digitalRead(POWER);
  if (val == HIGH){ 
  initSequence(gameLevel);
  done = 0;
  while (!done) {
    beep_n_spin();
    delay(PAUSEB4SEQ);
    playSequence(gameLevel);

    if (playerGuess(gameLevel)) {
      playWinSequence();
      done = 1;
      }
    
    else {
      playLoseSequence();
    }
  }
 }
}
/***************************************************************************************************************/
void initSequence(int gameLevel) {
  for (int i=0; i<gameLevel; i++) {
    simonSez[i] = random(NLEDS);
  }
}
/*******************************************************************************************************************/
void playSequence(int gameLevel) {
  for (int i=0; i<gameLevel; i++) {
    setLed(simonSez[i]); // Flash the LED in the sequence
    delay(500);
    setLed(-1); // turn all LEDs off
    delay(500);
  }
}
/*******************************************************************************************************************/
void setLed(int theLed) {
  // if not 0<=theLed<NLEDS (e.g. -1), turn all off
  for (int l=0; l<NLEDS; l++) {
    digitalWrite(LEDPINS[l],l==theLed);
  }
}
/**********************************************************************************************************/
int playerGuess(int gameLevel) {
  for (int i=0 ; i<gameLevel ; i++) {
    int guess=getSwitchStroke();
    // player feedback
    digitalWrite(LEDPINS[guess],HIGH);
    delay(250);
    digitalWrite(LEDPINS[guess],LOW);
    if (guess!=simonSez[i]) {
      return 0;
    }
  }
  return 1;
}

void beep_n_spin(){
  tone(11, 392, 1000); // play tone 55 (G4 = 392 Hz)
  digitalWrite(motorPin, HIGH);
  delay(1000); 
  digitalWrite(motorPin, LOW);
}
/**********************************************************************************************************************/
int playWinSequence() { // Flashes the LEDs victoriously
  for (int i=0; i<4*NLEDS; i++) {
    setLed(i%NLEDS); 
    delay(50);
  }
  setLed(-1); // turn all LEDs off
}
/**************************************************************************************************************/
int playLoseSequence() {// Flashes the LEDs defeatedly
  for (int i=0; i<16; i++) {
    for (int l=0; l<NLEDS; l++) {
      digitalWrite(LEDPINS[l],i&1);
    }
    delay(50);
  }
  setLed(-1); // turn all LEDs off
}

int getSwitchStroke() {
  for (int i=0; i<NLEDS; i++) {
    if (!digitalRead(SWITCHPINS[i])) {
      return i;
    }
  }
  return -1;
}
